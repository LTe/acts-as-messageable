# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rchardet` gem.
# Please instead update this file by running `bin/tapioca gem rchardet`.

module CharDet
  class << self
    def detect(aBuf); end
  end
end

CharDet::ACO = T.let(T.unsafe(nil), Integer)
CharDet::ACV = T.let(T.unsafe(nil), Integer)
CharDet::ASC = T.let(T.unsafe(nil), Integer)
CharDet::ASO = T.let(T.unsafe(nil), Integer)
CharDet::ASS = T.let(T.unsafe(nil), Integer)
CharDet::ASV = T.let(T.unsafe(nil), Integer)
CharDet::BIG5_TABLE_SIZE = T.let(T.unsafe(nil), Integer)
CharDet::BIG5_TYPICAL_DISTRIBUTION_RATIO = T.let(T.unsafe(nil), Float)
CharDet::BIG5_cls = T.let(T.unsafe(nil), Array)
CharDet::BIG5_st = T.let(T.unsafe(nil), Array)
CharDet::Big5CharLenTable = T.let(T.unsafe(nil), Array)
CharDet::Big5CharToFreqOrder = T.let(T.unsafe(nil), Array)

class CharDet::Big5DistributionAnalysis < ::CharDet::CharDistributionAnalysis
  def initialize; end

  def get_order(aStr); end
end

class CharDet::Big5Prober < ::CharDet::MultiByteCharSetProber
  def initialize; end

  def get_charset_name; end
end

CharDet::Big5SMModel = T.let(T.unsafe(nil), Hash)
CharDet::BulgarianLangModel = T.let(T.unsafe(nil), Array)
CharDet::CLASS_NUM = T.let(T.unsafe(nil), Integer)

class CharDet::CharDistributionAnalysis
  def initialize; end

  def feed(aStr, aCharLen); end
  def get_confidence; end
  def get_order(aStr); end
  def got_enough_data; end
  def reset; end
end

class CharDet::CharSetGroupProber < ::CharDet::CharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def probers; end
  def probers=(_arg0); end
  def reset; end
end

class CharDet::CharSetProber
  def initialize; end

  def active; end
  def active=(_arg0); end
  def feed(aBuf); end
  def filter_high_bit_only(aBuf); end
  def filter_with_english_letters(aBuf); end
  def filter_without_english_letters(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def get_state; end
  def reset; end
end

class CharDet::CodingStateMachine
  def initialize(sm); end

  def active; end
  def active=(_arg0); end
  def get_coding_state_machine; end
  def get_current_charlen; end
  def next_state(c); end
  def reset; end
end

CharDet::DONT_KNOW = T.let(T.unsafe(nil), Integer)
CharDet::EDetecting = T.let(T.unsafe(nil), Integer)
CharDet::EError = T.let(T.unsafe(nil), Integer)
CharDet::EEscAscii = T.let(T.unsafe(nil), Integer)
CharDet::EFoundIt = T.let(T.unsafe(nil), Integer)
CharDet::EHighbyte = T.let(T.unsafe(nil), Integer)
CharDet::EItsMe = T.let(T.unsafe(nil), Integer)
CharDet::ENOUGH_DATA_THRESHOLD = T.let(T.unsafe(nil), Integer)
CharDet::ENOUGH_REL_THRESHOLD = T.let(T.unsafe(nil), Integer)
CharDet::ENotMe = T.let(T.unsafe(nil), Integer)
CharDet::EPureAscii = T.let(T.unsafe(nil), Integer)
CharDet::EStart = T.let(T.unsafe(nil), Integer)
CharDet::EUCJPCharLenTable = T.let(T.unsafe(nil), Array)

class CharDet::EUCJPContextAnalysis < ::CharDet::JapaneseContextAnalysis
  def get_order(aStr); end
end

class CharDet::EUCJPDistributionAnalysis < ::CharDet::CharDistributionAnalysis
  def initialize; end

  def get_order(aStr); end
end

class CharDet::EUCJPProber < ::CharDet::MultiByteCharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::EUCJPSMModel = T.let(T.unsafe(nil), Hash)
CharDet::EUCJP_cls = T.let(T.unsafe(nil), Array)
CharDet::EUCJP_st = T.let(T.unsafe(nil), Array)
CharDet::EUCKRCharLenTable = T.let(T.unsafe(nil), Array)
CharDet::EUCKRCharToFreqOrder = T.let(T.unsafe(nil), Array)

class CharDet::EUCKRDistributionAnalysis < ::CharDet::CharDistributionAnalysis
  def initialize; end

  def get_order(aStr); end
end

class CharDet::EUCKRProber < ::CharDet::MultiByteCharSetProber
  def initialize; end

  def get_charset_name; end
end

CharDet::EUCKRSMModel = T.let(T.unsafe(nil), Hash)
CharDet::EUCKR_TABLE_SIZE = T.let(T.unsafe(nil), Integer)
CharDet::EUCKR_TYPICAL_DISTRIBUTION_RATIO = T.let(T.unsafe(nil), Float)
CharDet::EUCKR_cls = T.let(T.unsafe(nil), Array)
CharDet::EUCKR_st = T.let(T.unsafe(nil), Array)
CharDet::EUCTWCharLenTable = T.let(T.unsafe(nil), Array)
CharDet::EUCTWCharToFreqOrder = T.let(T.unsafe(nil), Array)

class CharDet::EUCTWDistributionAnalysis < ::CharDet::CharDistributionAnalysis
  def initialize; end

  def get_confidence; end
  def get_order(aStr); end
end

class CharDet::EUCTWProber < ::CharDet::MultiByteCharSetProber
  def initialize; end

  def get_charset_name; end
end

CharDet::EUCTWSMModel = T.let(T.unsafe(nil), Hash)
CharDet::EUCTW_TABLE_SIZE = T.let(T.unsafe(nil), Integer)
CharDet::EUCTW_TYPICAL_DISTRIBUTION_RATIO = T.let(T.unsafe(nil), Float)
CharDet::EUCTW_cls = T.let(T.unsafe(nil), Array)
CharDet::EUCTW_st = T.let(T.unsafe(nil), Array)

class CharDet::EscCharSetProber < ::CharDet::CharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::FINAL_KAF = T.let(T.unsafe(nil), String)
CharDet::FINAL_MEM = T.let(T.unsafe(nil), String)
CharDet::FINAL_NUN = T.let(T.unsafe(nil), String)
CharDet::FINAL_PE = T.let(T.unsafe(nil), String)
CharDet::FINAL_TSADI = T.let(T.unsafe(nil), String)
CharDet::FREQ_CAT_NUM = T.let(T.unsafe(nil), Integer)
CharDet::GB18030CharLenTable = T.let(T.unsafe(nil), Array)
CharDet::GB18030CharToFreqOrder = T.let(T.unsafe(nil), Array)

class CharDet::GB18030DistributionAnalysis < ::CharDet::CharDistributionAnalysis
  def initialize; end

  def get_order(aStr); end
end

class CharDet::GB18030Prober < ::CharDet::MultiByteCharSetProber
  def initialize; end

  def get_charset_name; end
end

CharDet::GB18030SMModel = T.let(T.unsafe(nil), Hash)
CharDet::GB18030_TABLE_SIZE = T.let(T.unsafe(nil), Integer)
CharDet::GB18030_TYPICAL_DISTRIBUTION_RATIO = T.let(T.unsafe(nil), Float)
CharDet::GB18030_cls = T.let(T.unsafe(nil), Array)
CharDet::GB18030_st = T.let(T.unsafe(nil), Array)
CharDet::GreekLangModel = T.let(T.unsafe(nil), Array)
CharDet::HZCharLenTable = T.let(T.unsafe(nil), Array)
CharDet::HZSMModel = T.let(T.unsafe(nil), Hash)
CharDet::HZ_cls = T.let(T.unsafe(nil), Array)
CharDet::HZ_st = T.let(T.unsafe(nil), Array)
CharDet::HebrewLangModel = T.let(T.unsafe(nil), Array)

class CharDet::HebrewProber < ::CharDet::CharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_state; end
  def is_final(c); end
  def is_non_final(c); end
  def reset; end
  def set_model_probers(logicalProber, visualProber); end
end

CharDet::HungarianLangModel = T.let(T.unsafe(nil), Array)
CharDet::IBM855_CharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::IBM866_CharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::ISO2022CNCharLenTable = T.let(T.unsafe(nil), Array)
CharDet::ISO2022CNSMModel = T.let(T.unsafe(nil), Hash)
CharDet::ISO2022CN_cls = T.let(T.unsafe(nil), Array)
CharDet::ISO2022CN_st = T.let(T.unsafe(nil), Array)
CharDet::ISO2022JPCharLenTable = T.let(T.unsafe(nil), Array)
CharDet::ISO2022JPSMModel = T.let(T.unsafe(nil), Hash)
CharDet::ISO2022JP_cls = T.let(T.unsafe(nil), Array)
CharDet::ISO2022JP_st = T.let(T.unsafe(nil), Array)
CharDet::ISO2022KRCharLenTable = T.let(T.unsafe(nil), Array)
CharDet::ISO2022KRSMModel = T.let(T.unsafe(nil), Hash)
CharDet::ISO2022KR_cls = T.let(T.unsafe(nil), Array)
CharDet::ISO2022KR_st = T.let(T.unsafe(nil), Array)
CharDet::Ibm855Model = T.let(T.unsafe(nil), Hash)
CharDet::Ibm866Model = T.let(T.unsafe(nil), Hash)
CharDet::JISCharToFreqOrder = T.let(T.unsafe(nil), Array)
CharDet::JIS_TABLE_SIZE = T.let(T.unsafe(nil), Integer)
CharDet::JIS_TYPICAL_DISTRIBUTION_RATIO = T.let(T.unsafe(nil), Float)
CharDet::JP2_CHAR_CONTEXT = T.let(T.unsafe(nil), Array)

class CharDet::JapaneseContextAnalysis
  def initialize; end

  def feed(aBuf, aLen); end
  def get_confidence; end
  def get_order(aStr); end
  def got_enough_data; end
  def reset; end
end

CharDet::KOI8R_CharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::Koi8rModel = T.let(T.unsafe(nil), Hash)
CharDet::LOGICAL_HEBREW_NAME = T.let(T.unsafe(nil), String)
CharDet::Latin1ClassModel = T.let(T.unsafe(nil), Array)

class CharDet::Latin1Prober < ::CharDet::CharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::Latin1_CharToClass = T.let(T.unsafe(nil), Array)
CharDet::Latin2HungarianModel = T.let(T.unsafe(nil), Hash)
CharDet::Latin2_HungarianCharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::Latin5BulgarianModel = T.let(T.unsafe(nil), Hash)
CharDet::Latin5CyrillicModel = T.let(T.unsafe(nil), Hash)
CharDet::Latin5_BulgarianCharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::Latin7GreekModel = T.let(T.unsafe(nil), Hash)
CharDet::Latin7_CharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::MAX_REL_THRESHOLD = T.let(T.unsafe(nil), Integer)

class CharDet::MBCSGroupProber < ::CharDet::CharSetGroupProber
  def initialize; end
end

CharDet::MINIMUM_DATA_THRESHOLD = T.let(T.unsafe(nil), Integer)
CharDet::MINIMUM_THRESHOLD = T.let(T.unsafe(nil), Float)
CharDet::MIN_FINAL_CHAR_DISTANCE = T.let(T.unsafe(nil), Integer)
CharDet::MIN_MODEL_DISTANCE = T.let(T.unsafe(nil), Float)
CharDet::MacCyrillicModel = T.let(T.unsafe(nil), Hash)

class CharDet::MultiByteCharSetProber < ::CharDet::CharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::NEGATIVE_SHORTCUT_THRESHOLD = T.let(T.unsafe(nil), Float)
CharDet::NORMAL_KAF = T.let(T.unsafe(nil), String)
CharDet::NORMAL_MEM = T.let(T.unsafe(nil), String)
CharDet::NORMAL_NUN = T.let(T.unsafe(nil), String)
CharDet::NORMAL_PE = T.let(T.unsafe(nil), String)
CharDet::NORMAL_TSADI = T.let(T.unsafe(nil), String)
CharDet::NUMBER_OF_SEQ_CAT = T.let(T.unsafe(nil), Integer)
CharDet::NUM_OF_CATEGORY = T.let(T.unsafe(nil), Integer)
CharDet::ONE_CHAR_PROB = T.let(T.unsafe(nil), Float)
CharDet::OTH = T.let(T.unsafe(nil), Integer)
CharDet::POSITIVE_CAT = T.let(T.unsafe(nil), Integer)
CharDet::POSITIVE_SHORTCUT_THRESHOLD = T.let(T.unsafe(nil), Float)
CharDet::RussianLangModel = T.let(T.unsafe(nil), Array)
CharDet::SAMPLE_SIZE = T.let(T.unsafe(nil), Integer)

class CharDet::SBCSGroupProber < ::CharDet::CharSetGroupProber
  def initialize; end
end

CharDet::SB_ENOUGH_REL_THRESHOLD = T.let(T.unsafe(nil), Integer)
CharDet::SHORTCUT_THRESHOLD = T.let(T.unsafe(nil), Float)
CharDet::SJISCharLenTable = T.let(T.unsafe(nil), Array)

class CharDet::SJISContextAnalysis < ::CharDet::JapaneseContextAnalysis
  def get_order(aStr); end
end

class CharDet::SJISDistributionAnalysis < ::CharDet::CharDistributionAnalysis
  def initialize; end

  def get_order(aStr); end
end

class CharDet::SJISProber < ::CharDet::MultiByteCharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::SJISSMModel = T.let(T.unsafe(nil), Hash)
CharDet::SJIS_cls = T.let(T.unsafe(nil), Array)
CharDet::SJIS_st = T.let(T.unsafe(nil), Array)
CharDet::SURE_NO = T.let(T.unsafe(nil), Float)
CharDet::SURE_YES = T.let(T.unsafe(nil), Float)
CharDet::SYMBOL_CAT_ORDER = T.let(T.unsafe(nil), Integer)

class CharDet::SingleByteCharSetProber < ::CharDet::CharSetProber
  def initialize(model, reversed = T.unsafe(nil), nameProber = T.unsafe(nil)); end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::TIS620CharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::TIS620ThaiModel = T.let(T.unsafe(nil), Hash)
CharDet::ThaiLangModel = T.let(T.unsafe(nil), Array)
CharDet::UCS2BECharLenTable = T.let(T.unsafe(nil), Array)
CharDet::UCS2BESMModel = T.let(T.unsafe(nil), Hash)
CharDet::UCS2BE_cls = T.let(T.unsafe(nil), Array)
CharDet::UCS2BE_st = T.let(T.unsafe(nil), Array)
CharDet::UCS2LECharLenTable = T.let(T.unsafe(nil), Array)
CharDet::UCS2LESMModel = T.let(T.unsafe(nil), Hash)
CharDet::UCS2LE_cls = T.let(T.unsafe(nil), Array)
CharDet::UCS2LE_st = T.let(T.unsafe(nil), Array)
CharDet::UDF = T.let(T.unsafe(nil), Integer)
CharDet::UTF8CharLenTable = T.let(T.unsafe(nil), Array)

class CharDet::UTF8Prober < ::CharDet::CharSetProber
  def initialize; end

  def feed(aBuf); end
  def get_charset_name; end
  def get_confidence; end
  def reset; end
end

CharDet::UTF8SMModel = T.let(T.unsafe(nil), Hash)
CharDet::UTF8_cls = T.let(T.unsafe(nil), Array)
CharDet::UTF8_st = T.let(T.unsafe(nil), Array)

class CharDet::UniversalDetector
  def initialize; end

  def close; end
  def done; end
  def feed(aBuf); end
  def reset; end
  def result; end
end

CharDet::VERSION = T.let(T.unsafe(nil), String)
CharDet::VISUAL_HEBREW_NAME = T.let(T.unsafe(nil), String)
CharDet::Win1250HungarianCharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::Win1250HungarianModel = T.let(T.unsafe(nil), Hash)
CharDet::Win1251BulgarianModel = T.let(T.unsafe(nil), Hash)
CharDet::Win1251CyrillicModel = T.let(T.unsafe(nil), Hash)
CharDet::Win1253GreekModel = T.let(T.unsafe(nil), Hash)
CharDet::Win1253_CharToOrderMap = T.let(T.unsafe(nil), Array)
CharDet::Win1255HebrewModel = T.let(T.unsafe(nil), Hash)
CharDet::Win1255_CharToOrderMap = T.let(T.unsafe(nil), Array)
