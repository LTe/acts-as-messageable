# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `timeout` gem.
# Please instead update this file by running `bin/tapioca gem timeout`.

module Timeout
  private

  def timeout(sec, klass = T.unsafe(nil), message = T.unsafe(nil), &block); end

  class << self
    def ensure_timeout_thread_created; end
    def timeout(sec, klass = T.unsafe(nil), message = T.unsafe(nil), &block); end

    private

    def create_timeout_thread; end
  end
end

Timeout::CONDVAR = T.let(T.unsafe(nil), Thread::ConditionVariable)

class Timeout::Error < ::RuntimeError
  class << self
    def handle_timeout(message); end
  end
end

class Timeout::ExitException < ::Exception
  def exception(*_arg0); end
end

Timeout::GET_TIME = T.let(T.unsafe(nil), Method)
Timeout::QUEUE = T.let(T.unsafe(nil), Thread::Queue)
Timeout::QUEUE_MUTEX = T.let(T.unsafe(nil), Thread::Mutex)

class Timeout::Request
  def initialize(thread, timeout, exception_class, message); end

  def deadline; end
  def done?; end
  def expired?(now); end
  def finished; end
  def interrupt; end
end

Timeout::TIMEOUT_THREAD_MUTEX = T.let(T.unsafe(nil), Thread::Mutex)
Timeout::VERSION = T.let(T.unsafe(nil), String)
